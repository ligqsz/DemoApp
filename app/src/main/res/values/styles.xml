<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorPrimary</item>
    </style>

    <style name="AppThemeNoActionBar" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="actionOverflowButtonStyle">@style/OverflowMenuStyle</item>
    </style>

    <!--dialog样式-->
    <style name="dialog_style" parent="@android:style/Theme.Dialog">
        <!--是否浮在界面上-->
        <item name="android:windowIsFloating">true</item>
        <!--是否半透明-->
        <item name="android:windowIsTranslucent">true</item>
        <!--是否有标题-->
        <item name="android:windowNoTitle">false</item>
        <!--窗口背景色透明-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:background">@android:color/transparent</item>
        <!--背景是否模糊显示(黑色)-->
        <item name="android:backgroundDimEnabled">false</item>
    </style>

    <style name="Dialog_Progress" parent="Base.Widget.AppCompat.ProgressBar" />

    <!--*************toolBar主题样式*************↓-->
    <!--主标题-->
    <style name="ToolbarTitle" parent="@style/TextAppearance.Widget.AppCompat.Toolbar.Title">
        <item name="android:textColor">#f0f0</item>
        <item name="android:textSize">15sp</item>
    </style>

    <!--子标题-->
    <style name="ToolbarSubtitle" parent="@style/TextAppearance.Widget.AppCompat.Toolbar.Subtitle">
        <item name="android:textColor">#f0f0</item>
        <item name="android:textSize">10sp</item>
    </style>

    <!--溢出[弹出]菜单样式 parent相当于继承【可以不要parent】-->
    <style name="OverflowMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        <!-- 是否覆盖锚点，默认为true，即盖住Toolbar -->
        <item name="overlapAnchor">false</item>
        <item name="android:dropDownWidth">wrap_content</item>
        <item name="android:paddingRight">5dp</item>
        <!-- 弹出层背景颜色 -->
        <item name="android:popupBackground">@color/white</item>
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <item name="android:dropDownVerticalOffset">5dp</item>
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">0dp</item>
        <!-- 设置弹出菜单文字颜色 -->
        <item name="android:textColor">@color/black</item>
        <!--设置overflow图标,用来替换之前的三个点-->
        <item name="android:src">@drawable/ic_menu_white_24dp</item>
    </style>
    <!--*************toolBar主题样式*************↑-->

    <style name="AppTheme.Ripple" parent="AppTheme">
        <item name="android:colorControlHighlight" tools:ignore="NewApi">#ff0000</item>
    </style>

    <style name="AutoButton" parent="AppTheme">
        <item name="buttonStyle">@style/Widget.AppCompat.Button</item>
        <item name="colorButtonNormal">?attr/colorAccent</item>
        <item name="android:colorControlHighlight" tools:ignore="NewApi">#00ff00</item>
    </style>
</resources>
